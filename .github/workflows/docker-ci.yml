name: CI/CD - dev

on:
  push:
    branches: ["dev"]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/vroom-vroom:dev-latest
            ${{ secrets.DOCKERHUB_USERNAME }}/vroom-vroom:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -euo pipefail
            # 도커 데몬 보장
            sudo systemctl enable --now docker

            # 안전한 로그인 (경고 제거)
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | sudo docker login \
              -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

            # 배포
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/vroom-vroom:dev-latest
            sudo docker rm -f vroom-vroom || true
            sudo docker run -d --name vroom-vroom \
              -p 80:8080 \
              --env-file /home/ec2-user/.env \
              --restart unless-stopped \
              ${{ secrets.DOCKERHUB_USERNAME }}/vroom-vroom:dev-latest

            # 상태 확인
            sudo docker ps --format "table {{.Names}}\t{{.Image}}\t{{.Ports}}"
