plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.sparta'
version = '0.0.1-SNAPSHOT'
description = 'vroom-vroom'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.hibernate:hibernate-spatial:6.2.7.Final'

	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// JWT
	compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	//validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//DB (postGIS 의존성 포함)
	implementation 'org.hibernate:hibernate-spatial'
	implementation 'org.locationtech.jts:jts-core:1.19.0'
	runtimeOnly 'org.postgresql:postgresql'

	//util
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//S3
	implementation 'software.amazon.awssdk:s3:2.20.96'
	implementation 'software.amazon.awssdk:auth:2.20.96'

	//test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//HTTP 요청용
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.core:jackson-annotations'
	implementation 'com.fasterxml.jackson.core:jackson-core'

}

tasks.named('test') {
	useJUnitPlatform()
}
